// <auto-generated />
using DBConnection.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DBConnection.Migrations
{
    [DbContext(typeof(TabloidContext))]
    [Migration("20240615172606_added-missing-tables2")]
    partial class addedmissingtables2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("viatabloid")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shared.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("department", "viatabloid");
                });

            modelBuilder.Entity("Shared.Models.DepartmentStory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("StoryId");

                    b.ToTable("departmentStory", "viatabloid");
                });

            modelBuilder.Entity("Shared.Models.Story", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("text");

                    b.Property<string>("StoryId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("StoryId");

                    b.ToTable("story", "viatabloid");
                });

            modelBuilder.Entity("Shared.Models.DepartmentStory", b =>
                {
                    b.HasOne("Shared.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Models.Story", "Story")
                        .WithMany()
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Story");
                });

            modelBuilder.Entity("Shared.Models.Story", b =>
                {
                    b.HasOne("Shared.Models.Department", null)
                        .WithMany("Stories")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Shared.Models.Story", null)
                        .WithMany("Stories")
                        .HasForeignKey("StoryId");
                });

            modelBuilder.Entity("Shared.Models.Department", b =>
                {
                    b.Navigation("Stories");
                });

            modelBuilder.Entity("Shared.Models.Story", b =>
                {
                    b.Navigation("Stories");
                });
#pragma warning restore 612, 618
        }
    }
}
